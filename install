#!/usr/bin/env bash

set -euo pipefail

# Ensure /etc/pam.d/sudo_local is linked with sudo (for Touch ID support)
# Skip if requested to avoid sudo prompts (bootstrap handles this separately)
if [[ "${DOTFILES_SKIP_TOUCHID_LINK:-false}" == "true" ]]; then
  echo "[INFO] Skipping Touch ID sudo_local setup."
elif [[ ! -L /etc/pam.d/sudo_local ]] || [[ "$(readlink /etc/pam.d/sudo_local 2>/dev/null)" != "$(pwd)/system/pam.d/sudo_local" ]]; then
  echo "[INFO] Setting up Touch ID sudo_local symlink..."
  sudo ln -sf "$(pwd)/system/pam.d/sudo_local" /etc/pam.d/sudo_local
  echo "[INFO] /etc/pam.d/sudo_local linked with sudo."
else
  echo "[INFO] Touch ID sudo_local already correctly configured."
fi

readonly CONFIG="config/dotbot/install.conf.yaml"
readonly DOTBOT_DIR="tools/dotbot"
readonly DOTBOT_BIN="bin/dotbot"
BASEDIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
readonly BASEDIR

cd "${BASEDIR}"

# Provide verbose logging and error checks for Dotbot installation
echo "[INFO] Syncing Dotbot submodules..."
git -C "${DOTBOT_DIR}" submodule sync --quiet --recursive
if git -C "${DOTBOT_DIR}" submodule update --init --recursive --quiet; then
  echo "[INFO] Dotbot submodules updated successfully."
else
  echo "[ERROR] Failed to update Dotbot submodules. Please check your network and try again." >&2
  exit 1
fi
"${BASEDIR}/${DOTBOT_DIR}/${DOTBOT_BIN}" \
  -d "${BASEDIR}" \
  -c "${CONFIG}" \
  "$@"
echo "[INFO] Dotbot apply step completed."
